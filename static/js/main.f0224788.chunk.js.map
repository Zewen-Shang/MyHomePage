{"version":3,"sources":["static/avatar.png","static/vscode.jpg","static/banner.png","pages/Index/Index.tsx","pages/Article/Article.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Meta","Card","Index","Fragment","className","size","src","ava","color","span","style","width","cover","alt","vscode","title","description","extra","href","React","Component","Article","background","backIcon","subTitle","Header","Layout","Footer","Content","App","path","component","extac","maxWidth","margin","textAlign","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,+UCOpCC,EAAQC,IAARD,KAyCQE,E,uKApCP,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKC,UAAU,gBACX,kBAAC,IAAD,CAAQC,KAAM,IAAKC,IAAKC,MAAO,6BAC/B,0BAAMH,UAAU,QAAhB,eAAyC,6BACzC,0BAAMA,UAAU,QACZ,kBAAC,IAAD,CAAKI,MAAM,WAAX,gBACA,kBAAC,IAAD,CAAKA,MAAM,YAAX,SACA,kBAAC,IAAD,CAAKA,MAAM,QAAX,cAGR,yBAAKJ,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKK,KAAM,GACP,kBAAC,IAAD,CACAC,MAAO,CAAEC,MAAO,KAChBC,MAAO,yBAAKC,IAAI,UAAUP,IAAKQ,OAE3B,kBAACd,EAAD,CAAMe,MAAM,sCAAkBC,YAAY,2DAGlD,kBAAC,IAAD,CAAKP,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACP,kBAAC,IAAD,CAAMM,MAAM,oBAAoBE,MAAO,uBAAGC,KAAK,KAAR,QAAsBR,MAAO,CAAEC,MAAO,MACzE,2CACA,2CACA,oD,GA7BZQ,IAAMC,W,2BCgFXC,G,8KAhFP,OACI,kBAAC,IAAMlB,SAAP,KACI,yBAAKC,UAAU,cACX,yBAAKE,IAAKgB,OAGd,yBAAKlB,UAAU,qBAIX,yBAAKA,UAAU,QACf,kBAAC,IAAD,CACImB,UAAU,EACVR,MAAO,mEACPS,SAAS,yDAEb,koR,GAlBEL,IAAMC,YCApBK,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QA2BTC,E,uKAvBb,OACC,6BACC,kBAACJ,EAAD,MAGA,kBAACG,EAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOE,KAAK,WAAWC,UAAWV,IAClC,kBAAC,IAAD,CAAOS,KAAK,IAAIE,OAAK,EAACD,UAAW7B,OAIpC,kBAACyB,EAAD,KACC,yBAAKjB,MAAO,CAACuB,SAAS,OAAOC,OAAO,SAASC,UAAU,SAASC,gBAAgB,UAAhF,wC,GAhBajB,IAAMC,WCGJiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDgIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f0224788.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.b623b553.png\";","module.exports = __webpack_public_path__ + \"static/media/vscode.7a2cbbbd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner.a2a1741d.png\";","import React from 'react';\r\nimport {Avatar, Row, Col,Card,Tag} from \"antd\";\r\n\r\nimport \"./Index.css\"\r\nimport ava from \"../../static/avatar.png\";\r\nimport vscode from \"../../static/vscode.jpg\"\r\n\r\nconst {Meta} = Card;\r\n\r\nclass Index extends React.Component<{},{}>{\r\n\r\n    render():JSX.Element{\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"Index-banner\">\r\n                    <Avatar size={128} src={ava} /><br/>\r\n                    <span className=\"name\">Zewen-Shang</span><br/>\r\n                    <span className=\"info\">\r\n                        <Tag color=\"magenta\">前端</Tag>\r\n                        <Tag color=\"geekblue\">unity</Tag>\r\n                        <Tag color=\"cyan\">graphics</Tag>\r\n                    </span>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Row>\r\n                        <Col span={8}>\r\n                            <Card \r\n                            style={{ width: 300}}\r\n                            cover={<img alt=\"example\" src={vscode} />}\r\n                            >\r\n                                <Meta title=\"VScode C++ 踩坑记录\" description=\"对于launch.json,tasks,json的介绍\" />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={8}></Col>\r\n                        <Col span={8}>\r\n                            <Card title=\"Default size card\" extra={<a href=\"#\">More</a>} style={{ width: 300 }}>\r\n                                <p>Card content</p>\r\n                                <p>Card content</p>\r\n                                <p>Card content</p>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport {PageHeader} from \"antd\";\r\n\r\nimport background from \"../../static/banner.png\";\r\nimport vscode from \"../../static/vscode.jpg\";\r\nimport \"./Article.css\"\r\n\r\nclass Article extends React.Component<{},{}>{\r\n    render():JSX.Element{\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"background\" >\r\n                    <img src={background}/>\r\n                </div>\r\n\r\n                <div className=\"Article-container\">\r\n                    {/* <div className=\"Article-banner\">\r\n                        <img src={vscode} />\r\n                    </div> */}\r\n                    <div className=\"text\">\r\n                    <PageHeader\r\n                        backIcon={false}\r\n                        title={<h1>VScode C++ 踩坑记录</h1>}\r\n                        subTitle=\"对于launch.json,tasks,json的介绍\"\r\n                    />\r\n                    <div>\r\n                    解决方法有很多,如果可以对html改动的话,就给你需要细化的页面元素加多一个class或者ID就行了,当然这种方法应该不是...\r\n更多关于不同css文件 命名冲突的问题>>\r\n百度知道 - 百度快照\r\n为您推荐：如何解决css样式冲突css样式被覆盖怎么解决样式冲突怎么解决\r\n样式冲突css冲突两个style冲突样式冲突修复何为样式冲突\r\n【css命名冲突 vue】-博文推荐-CSDN博客\r\n2019年11月9日 - CSDN提供了精准css命名冲突 vue信息,主要包含: css命名冲突 vue信等内容,查询最新最全的css命名冲突 vue信解决方案,就上CSDN热门排行榜频道.\r\nCSDN技术社区 - 百度快照\r\ncss命名冲突解决方法\r\n2018年9月3日 - css的命名冲突目前有几种解决方法:1.命名约定人为的制定一下命名规则以避免冲突,例如前缀,嵌套等2.CSS in JS在JavaScript中写CSS,使用工具编译为css,...\r\nhttps://www.bbsmax.com/A/WpdK0...  - 百度快照\r\n解决方法有很多,如果可以对html改动的话,就给你需要细化的页面元素加多一个class或者ID就行了,当然这种方法应该不是...\r\n更多关于不同css文件 命名冲突的问题>>\r\n百度知道 - 百度快照\r\n为您推荐：如何解决css样式冲突css样式被覆盖怎么解决样式冲突怎么解决\r\n样式冲突css冲突两个style冲突样式冲突修复何为样式冲突\r\n【css命名冲突 vue】-博文推荐-CSDN博客\r\n2019年11月9日 - CSDN提供了精准css命名冲突 vue信息,主要包含: css命名冲突 vue信等内容,查询最新最全的css命名冲突 vue信解决方案,就上CSDN热门排行榜频道.\r\nCSDN技术社区 - 百度快照\r\ncss命名冲突解决方法\r\n2018年9月3日 - css的命名冲突目前有几种解决方法:1.命名约定人为的制定一下命名规则以避免冲突,例如前缀,嵌套等2.CSS in JS在JavaScript中写CSS,使用工具编译为css,...\r\nhttps://www.bbsmax.com/A/WpdK0...  - 百度快照\r\n解决方法有很多,如果可以对html改动的话,就给你需要细化的页面元素加多一个class或者ID就行了,当然这种方法应该不是...\r\n更多关于不同css文件 命名冲突的问题>>\r\n百度知道 - 百度快照\r\n为您推荐：如何解决css样式冲突css样式被覆盖怎么解决样式冲突怎么解决\r\n样式冲突css冲突两个style冲突样式冲突修复何为样式冲突\r\n【css命名冲突 vue】-博文推荐-CSDN博客\r\n2019年11月9日 - CSDN提供了精准css命名冲突 vue信息,主要包含: css命名冲突 vue信等内容,查询最新最全的css命名冲突 vue信解决方案,就上CSDN热门排行榜频道.\r\nCSDN技术社区 - 百度快照\r\ncss命名冲突解决方法\r\n2018年9月3日 - css的命名冲突目前有几种解决方法:1.命名约定人为的制定一下命名规则以避免冲突,例如前缀,嵌套等2.CSS in JS在JavaScript中写CSS,使用工具编译为css,...\r\nhttps://www.bbsmax.com/A/WpdK0...  - 百度快照\r\n解决方法有很多,如果可以对html改动的话,就给你需要细化的页面元素加多一个class或者ID就行了,当然这种方法应该不是...\r\n更多关于不同css文件 命名冲突的问题>>\r\n百度知道 - 百度快照\r\n为您推荐：如何解决css样式冲突css样式被覆盖怎么解决样式冲突怎么解决\r\n样式冲突css冲突两个style冲突样式冲突修复何为样式冲突\r\n【css命名冲突 vue】-博文推荐-CSDN博客\r\n2019年11月9日 - CSDN提供了精准css命名冲突 vue信息,主要包含: css命名冲突 vue信等内容,查询最新最全的css命名冲突 vue信解决方案,就上CSDN热门排行榜频道.\r\nCSDN技术社区 - 百度快照\r\ncss命名冲突解决方法\r\n2018年9月3日 - css的命名冲突目前有几种解决方法:1.命名约定人为的制定一下命名规则以避免冲突,例如前缀,嵌套等2.CSS in JS在JavaScript中写CSS,使用工具编译为css,...\r\nhttps://www.bbsmax.com/A/WpdK0...  - 百度快照\r\n解决方法有很多,如果可以对html改动的话,就给你需要细化的页面元素加多一个class或者ID就行了,当然这种方法应该不是...\r\n更多关于不同css文件 命名冲突的问题>>\r\n百度知道 - 百度快照\r\n为您推荐：如何解决css样式冲突css样式被覆盖怎么解决样式冲突怎么解决\r\n样式冲突css冲突两个style冲突样式冲突修复何为样式冲突\r\n【css命名冲突 vue】-博文推荐-CSDN博客\r\n2019年11月9日 - CSDN提供了精准css命名冲突 vue信息,主要包含: css命名冲突 vue信等内容,查询最新最全的css命名冲突 vue信解决方案,就上CSDN热门排行榜频道.\r\nCSDN技术社区 - 百度快照\r\ncss命名冲突解决方法\r\n2018年9月3日 - css的命名冲突目前有几种解决方法:1.命名约定人为的制定一下命名规则以避免冲突,例如前缀,嵌套等2.CSS in JS在JavaScript中写CSS,使用工具编译为css,...\r\nhttps://www.bbsmax.com/A/WpdK0...  - 百度快照\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article;","import React from 'react';\nimport {Switch,HashRouter, Route} from \"react-router-dom\";\nimport {Layout,Menu} from \"antd\";\n\nimport Index from \"./pages/Index/Index\";\nimport Article from './pages/Article/Article';\n \nconst { Header, Footer, Content } = Layout;\n\nclass App extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header>\n\n\t\t\t\t</Header>\n\t\t\t\t<Content>\n\t\t\t\t\t<HashRouter>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/article\" component={Article} />\n\t\t\t\t\t\t\t<Route path=\"/\" extac component={Index} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</HashRouter>\n\t\t\t\t</Content>\n\t\t\t\t<Footer>\n\t\t\t\t\t<div style={{maxWidth:\"100%\",margin:\"0 auto\",textAlign:\"center\",backgroundColor:\"black\"}}>\n\t\t\t\t\t\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\t\t\t\t\t</div>\n\t\t\t\t</Footer>\n\t\t\t</div>\n\t\t);\n\t} \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}